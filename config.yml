firing_timeout: 1m  # After this time Incident status will change from "firing" to "unknown" if no new alerts appear
resolved_timeout: 1m  # After this time Incident status will change from "resolved" to "closed" if no new alerts appear

drop_steps_older_than: 10m  # After this time chain steps will drop (incorrect behavior)

# Admin notifications uses to notify IMPulse administrators channel about emergency situations
admin_notifications: True  # Enable IMPulse notifications
admin_notifications_channel: noth  # Channel for IMPulse notifications
admin_notifications_when_unknown: True  # Notify about Incident in "unknown" status
admin_notifications_when_drop_steps: True  # Notify about dropped Incident chain steps


route:
  chain: warning
  channel: space
  routes:
  - matchers:
    - severity="warning"
    chain: warning
    channel: warning
  - matchers:
    - team="space"
    - instance =~ "localhost.*"
    chain: space_team
    channel: space
    routes:
    - matchers:
      - severity="critical"
      chain: space_team_critical
      channel: space
  - matchers:
    - team="infrastructure"
    chain: infra
    channel: infrastructure


webhooks:
  Oleg: https://home.ditsi.ru/


application:
  type: slack
  verification_token: "{{ SLACK_VERIFICATION_TOKEN }}"
  bot_user_oauth_token: "{{ SLACK_BOT_USER_OAUTH_TOKEN }}"
  admin_users: # users which will be notified when warnings and errors occurs
    - DiTsi
  chains:
    space_team:
    - user: Andrey
    - user: Oleg
    - webhook: Oleg
    - wait: 10m
    - user_group: space_squad
    warning:
    - user_group: space_squad
    - wait: 10s
    - user: DiTsi
    - wait: 10s
    - webhook: Oleg
  user_groups:
    space_squad:
      users:
      - DiTsi
      - Oleg
  users:
    DiTsi: {full_name: "Dmitry Tsybus"}
    Oleg: {full_name: "Oleg"}
    Andrey: {full_name: "Andrey"}
  message_template: |
    {% set status = payload.get("status", "Unknown") -%}
    {% set annotations = payload.get("commonAnnotations", {}).copy() -%}
    {% set commonLabels = payload.get("commonLabels", {}) -%}
    {% set status_emoji = {"firing": ":fire:", "resolved": ":white_check_mark:"}[status] | default(":warning:") -%}
    {{ status_emoji }} {{ commonLabels.alertname }}
    
    {% set annotations = payload.get("commonAnnotations", {}) -%}
    {% set groupLabels = payload.get("groupLabels", {}) -%}
    {% set commonLabels = payload.get("commonLabels", {}) -%}
    {% set severity = groupLabels.severity -%}
    {% set alerts = payload.get("alerts", {}) -%}
    {% set severity_emoji = {"critical": ":rotating_light:", "warning": ":warning:" }[severity] | default(":question:") -%}
    *{{ annotations.summary }}*
    {% if annotations.description %}_{{ annotations.description }}_{% endif -%}
    {%- if alerts[0].labels.instance %}
    *Instance:* {{ alerts[0].labels.instance }}  {%- for l in alerts[0].labels.keys() if l != 'alertname' and l != 'region' and l != 'instance' and l not in commonLabels.keys() -%}{{l}}=`{{ alerts[0].labels[l] }}`{% if not loop.last %},  {% endif %}{% endfor %}
    {%- endif %}
    {%- if annotations.value %}
    *Value:* {{ annotations.value }}
    {%- endif %}
    {%- if commonLabels | length > 0 %}
    *Labels:*
    {%- for k, v in commonLabels.items() if k != 'alertname' and k != 'instance' %}
        {{ k }}=`{{ v }}`
    {%- endfor %}
    {%- endif %}
    {% if annotations.expr %} <{% raw %}https://grafana.com/explore?orgId=1&left=%7B"datasource":"prometheus_1","queries":%5B%7B"refId":"A","datasource":%7B"type":"prometheus","uid":"prometheus_1"%7D,"editorMode":"code","expr":"{% endraw %}{{ annotations.expr | urlencode | replace('%2C',',') | replace('%5C','%5C%22') | replace('%22','%5C%22') | replace('/','%2F') | replace('%0A','') }}{% raw %}","legendFormat":"__auto","range":true,"instant":true%7D%5D,"range":%7B"from":"now-1h","to":"now"%7D%7D{% endraw %}|:grafana:>{% endif %}
